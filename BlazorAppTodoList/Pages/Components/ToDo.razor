@page "/todo"

<h3>@HeaderName</h3>
<!-- Edit Form-->
<EditForm Model="task" calss="form-inline" OnValidSubmit="AddTask">
    <input class="form-control mx-2" type="text" @bind-value="task.TaskName"/>
    <button class= "btn btn-outline-primary" mx-2>Add Task</button>
</EditForm>

<div class="progress-bar my-2 mx-2" role="progressbar" style="width:@(PercentageCompleted)%" aria-valuemax="100" aria-valuemin="0">
    @(PercentageCompleted)%
</div>

<ul>
    @foreach(var taskitem in taskList)
    {
        if (taskitem.IsComplete)
        {
            <!--Task completed-->
            <li class ="list-group-item list-group-item-success mx-1" @onclick="(()=>taskitem.IsComplete =! taskitem.IsComplete)"><del>@taskitem.TaskName</del></li>
        }
        else
        {
            <!--Task Not completed-->
            <li class= "list-group-item list-group-item-secondary mx-1" @onclick="(()=>taskitem.IsComplete =! taskitem.IsComplete)"> @taskitem.TaskName</li>
        }
    }
</ul>

@code {
    // C# code
    protected List<TaskModel> taskList = new List<TaskModel>();
    protected TaskModel task = new TaskModel();

    protected override void OnInitialized()
    {
        if (HeaderName == "")
        {
            HeaderName = "ToDo";
        }
    }

    [Parameter]
    public string? HeaderName{ get; set; }   // "?" pour enlever l'erreur

    private void AddTask()
    {
        taskList.Add(task);
        task = new TaskModel();
    }

    public int PercentageCompleted
    {
        get
        {
            return taskList.Count > 0 ? (taskList.Count(x=> x.IsComplete)*100/taskList.Count) : 0;
        }
    }
}



